- name: PreRequis UtilitaireNAM
  hosts: app
  
  vars:
    tomcat_version: 8.0.36
    tomcat_base: '{{ utilitaire_nam_base_dir }}'
    catalina_home: '{{ utilitaire_nam_base_dir }}/apache-tomcat-{{ tomcat_version }}'
    java_url: http://download.oracle.com/otn-pub/java/jdk/8u92-b14
    java_version_maj: 1
    java_version_min: 8
    java_version_patch: 0
    java_version_update: 92
    java_version: '{{ java_version_maj }}.{{ java_version_min }}.{{ java_version_patch }}_{{ java_version_update }}'
    java_package: 'jdk-{{ java_version_min }}u{{ java_version_update }}-linux-x64.tar.gz'
    java_home: /opt/jdk{{Â java_version }}
    tomcat_url: http://apache.mirror.rafal.ca/tomcat/tomcat-8/v{{ tomcat_version }}/bin
    
  tasks:
  - name: Installation Zip et Unzip
    yum:
      name: '{{ item }}'
      state: present
    with_items:
      - gzip
      - tar
      - wget
      
  - name: Download JAVA
    command: wget --no-check-certificate --no-cookies --header "Cookie:oraclelicense=accept-securebackup-cookie" {{ java_url }}/{{ java_package }} -O /tmp/{{ java_package }} creates='{{ java_home }}'
    
  - name: Extract Java archive
    command: chdir=/tmp /bin/tar xvf /tmp/{{ java_package }} -C /opt creates='{{ java_home }}'

  - name: Supprimer Java Archive
    file: path='/tmp/{{ java_package }}' state=absent
     
  - name: add group
    group: name='{{ utilitaire_nam_group }}'
  
  - name: add user
    user: name='{{ utilitaire_nam_admin }}' group='{{ utilitaire_nam_group }}' home='/home/{{ utilitaire_nam_admin }}' createhome=yes
  
  - name: Download Tomcat 8
    command: wget {{ tomcat_url }}/apache-tomcat-{{ tomcat_version }}.tar.gz -O /tmp/apache-tomcat-{{ tomcat_version }}.tar.gz creates='{{ catalina_home }}'
    
  - name: Create base dir
    file: path='{{ utilitaire_nam_base_dir }}' state=directory owner='{{ utilitaire_nam_admin }}' group='{{ utilitaire_nam_group }}'
    
  - name: Extract Tomcat archive
    command: chdir=/tmp /bin/tar xvf /tmp/apache-tomcat-{{ tomcat_version }}.tar.gz -C {{ utilitaire_nam_base_dir }} creates='{{ catalina_home }}'
  
  - name: Change ownership of Tomcat installation
    file: path='{{ catalina_home }}' owner='{{ utilitaire_nam_admin }}' group='{{ utilitaire_nam_group }}' state=directory recurse=yes
  
  - name: Configure Tomcat server
    template: src=server.xml dest='{{ catalina_home }}/conf/' owner='{{ utilitaire_nam_admin }}' group='{{ utilitaire_nam_group }}'
    notify: restart tomcat
  
  - name: Configure Tomcat users
    template: src=tomcat-users.xml dest='{{ catalina_home }}/conf/' owner='{{ utilitaire_nam_admin }}' group='{{ utilitaire_nam_group }}'
    notify: restart tomcat
  
  - name: Install Tomcat init script
    template: src=tomcat-initscript.sh dest=/etc/init.d/tomcat mode=0755
  
  - name: Deployer le WAR UtilitaireNAM
    copy: src='{{ war_file }}' dest='{{ catalina_home }}/webapps/utilitaire-nam-service.war' force=yes owner='{{ utilitaire_nam_admin }}' group='{{ utilitaire_nam_group }}'
      
  - name: Start Tomcat
    service: name=tomcat state=started enabled=yes
  
  - name: deploy iptables rules
    firewalld: port='{{ tomcat_http_port }}/tcp' state=enabled immediate=true permanent=true
    when: ansible_distribution_major_version == "7" and ansible_os_family == "RedHat"
  
  - name: wait for tomcat to start
    wait_for: port={{ tomcat_http_port }}  
  handlers:
    - name: restart tomcat 
      service: name=tomcat state=restarted